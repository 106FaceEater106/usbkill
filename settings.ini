[config]

# Whitelist command lists the USB ids that you want whitelisted
# How to get the correct usbid for your trusted USB device?
# BSD/Linux: run "lsusb", the usbid will looks like this: 0123:9abc
# Mac OS X: run "system_profiler SPUSBDataType" in the terminal and find the Vendor/Product ID, it will looks like this:
# > Product ID: 0x8403
# > Vendor ID: 0x05ac  (Apple Inc.)
# Take the 4 characters after the 0x and merge them (Vendor ID first), it will looks like: 05ac:8403
# Be warned! Other parties can copy your trusted usbid to another usb device!
# use whitelist command and single space separation as follows:
# whitelist = ["usbid1", "usbid2"]
whitelist = []

# allow for a certain amount of sleep time between checks, e.g. 0.25 seconds:
sleep = 0.25

# Log file location:
log_file = /var/log/usbkill/usbkill.log

# Remove log (folder) and settings (folder) and usbkill program (folder) upon kill?
# This might be usefull if you only encrypt portions of your disk (home folder or volumes).
# Make sure to sync the system (using do_sync=True) if this is a critical feature for you.
# (True/False)
melt_usbkill = False

# What command should be used to remove files? Add the arguments you want to be used
# The developer of usbkill advises srm or shred
# Example 'srm -zr'
remove_file_command = srm -zr

# What files should be removed upon a kill?
# Provide absolute paths to the files (paths that start with '/' or '~').
# Use " not ' to define the strings, e.g.:
# files_to_remove = ["~/Desktop/contacts.txt", "~/Desktop/dpr_journal.txt"]
files_to_remove = []

# What folders should be removed upon a kill?
# Provide absolute paths to the files (paths that start with '/' or '~').
# Content in folders will be removed recursively
# Use " not ' to define the strings, e.g.:
# folders_to_remove = ["~/Desktop/sensitive/", "~/Desktop/dpr_journal_entries/"]
folders_to_remove = [ ]

# Should usbkill sync the file system for you?
# This should not be a problem on most computers.
# Sync will save some of your work to disk before killing your computer.
do_sync = True

# Custom kill commands that can not be specified using above described mechanisms.
# This is where you want to release volumes, etc.
# These commands will run in order and as root, as the last commands before a possible sync and shut down. 
# Use " not ' to define the strings, e.g.:
# kill_commands = [ "bash ~/scripts/destroy.sh" ]
kill_commands = [ ]

